C51 COMPILER V9.54   LCD1602                                                               07/03/2024 22:49:24 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: D:\App\Keil_v5\C51\BIN\C51.EXE LCD\LCD1602.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRIN
                    -T(.\Listings\LCD1602.lst) TABS(2) OBJECT(.\Objects\LCD1602.obj)

line level    source

   1          #include "reg52.h"
   2          #include "LCD1602.h"
   3          
   4          #ifndef uchar
   5          #define uchar unsigned char
   6          #endif
   7          
   8          #ifndef uint
   9          #define uint unsigned int
  10          #endif
  11          
  12          #define LCD1602_DATAPINS P0 // 数据8位 DB0-DB7
  13          sbit LCD1602_E = P2 ^ 7;    // 使能信号
  14          sbit LCD1602_RW = P2 ^ 5;   // 读写选择 R/_W
  15          sbit LCD1602_RS = P2 ^ 6;   // 数据/_命令 选择
  16          
  17          uchar Disp[] = " LiangganNo.13 ";
  18          uchar Disp2[] = " 666666 ";
  19          
  20          /*******************************************************************************
  21           * 函 数 名         : Lcd1602_Delay1ms
  22           * 函数功能      : 延时函数，延时1ms
  23           * 输    入         : c
  24           * 输    出         : 无
  25           * 说    名         : 该函数是在12MHZ晶振下，12分频单片机的延时。
  26           *******************************************************************************/
  27          
  28          void Lcd1602_Delay1ms(uint c) // 误差 0us
  29          {
  30   1          uchar a, b;
  31   1          for (; c > 0; c--)
  32   1          {
  33   2              for (b = 199; b > 0; b--)
  34   2              {
  35   3                  for (a = 1; a > 0; a--)
  36   3                      ;
  37   3              }
  38   2          }
  39   1      }
  40          
  41          /*******************************************************************************
  42           * 函 数 名         : LcdWriteCom
  43           * 函数功能      : 向LCD写入一个字节的命令
  44           * 输    入         : com
  45           * 输    出         : 无
  46           *******************************************************************************/
  47          #ifndef LCD1602_4PINS       // 当没有定义这个LCD1602_4PINS时
  48          void LcdWriteCom(uchar com) // 写入命令
  49          {
  50   1          LCD1602_E = 0;  // 使能
  51   1          LCD1602_RS = 0; // 选择发送命令
  52   1          LCD1602_RW = 0; // 选择写入
  53   1      
  54   1          LCD1602_DATAPINS = com; // 放入命令
C51 COMPILER V9.54   LCD1602                                                               07/03/2024 22:49:24 PAGE 2   

  55   1          Lcd1602_Delay1ms(1);    // 等待数据稳定
  56   1      
  57   1          LCD1602_E = 1;       // 写入时序
  58   1          Lcd1602_Delay1ms(5); // 保持时间
  59   1          LCD1602_E = 0;
  60   1      }
  61          #else
              void LcdWriteCom(uchar com) // 写入命令
              {
                  LCD1602_E = 0;  // 使能清零
                  LCD1602_RS = 0; // 选择写入命令
                  LCD1602_RW = 0; // 选择写入
              
                  LCD1602_DATAPINS = com; // 由于4位的接线是接到P0口的高四位，所以传送高四位不用
             -改
                  Lcd1602_Delay1ms(1);
              
                  LCD1602_E = 1; // 写入时序
                  Lcd1602_Delay1ms(5);
                  LCD1602_E = 0;
              
                  LCD1602_DATAPINS = com << 4; // 发送低四位
                  Lcd1602_Delay1ms(1);
              
                  LCD1602_E = 1; // 写入时序
                  Lcd1602_Delay1ms(5);
                  LCD1602_E = 0;
              }
              #endif
  83          /*******************************************************************************
  84           * 函 数 名         : LcdWriteData
  85           * 函数功能      : 向LCD写入一个字节的数据
  86           * 输    入         : dat
  87           * 输    出         : 无
  88           *******************************************************************************/
  89          #ifndef LCD1602_4PINS
  90          void LcdWriteData(uchar dat) // 写入数据
  91          {
  92   1          LCD1602_E = 0;  // 使能清零
  93   1          LCD1602_RS = 1; // 选择输入数据
  94   1          LCD1602_RW = 0; // 选择写入
  95   1      
  96   1          LCD1602_DATAPINS = dat; // 写入数据
  97   1          Lcd1602_Delay1ms(1);
  98   1      
  99   1          LCD1602_E = 1;       // 写入时序
 100   1          Lcd1602_Delay1ms(5); // 保持时间
 101   1          LCD1602_E = 0;
 102   1      }
 103          #else
              void LcdWriteData(uchar dat) // 写入数据
              {
                  LCD1602_E = 0;  // 使能清零
                  LCD1602_RS = 1; // 选择写入数据
                  LCD1602_RW = 0; // 选择写入
              
                  LCD1602_DATAPINS = dat; // 由于4位的接线是接到P0口的高四位，所以传送高四位不用
             -改
                  Lcd1602_Delay1ms(1);
              
                  LCD1602_E = 1; // 写入时序
                  Lcd1602_Delay1ms(5);
C51 COMPILER V9.54   LCD1602                                                               07/03/2024 22:49:24 PAGE 3   

                  LCD1602_E = 0;
              
                  LCD1602_DATAPINS = dat << 4; // 写入低四位
                  Lcd1602_Delay1ms(1);
              
                  LCD1602_E = 1; // 写入时序
                  Lcd1602_Delay1ms(5);
                  LCD1602_E = 0;
              }
              #endif
 125          /*******************************************************************************
 126           * 函 数 名       : LcdInit()
 127           * 函数功能    : 初始化LCD屏
 128           * 输    入       : 无
 129           * 输    出       : 无
 130           *******************************************************************************/
 131          #ifndef LCD1602_4PINS
 132          void LcdInit() // LCD初始化子程序
 133          {
 134   1          // 功能设定
 135   1          // 001
 136   1          // DL 0=数据总线为 4 位     1=数据总线为 8 位
 137   1          // N 0=显示 1 行     1=显示 2 行
 138   1          // F 0=5×7 点阵/每字符     1=5×10 点阵/每字符
 139   1          // 00
 140   1          LcdWriteCom(0x38); // 开显示
 141   1      
 142   1          // 显示开关控制指令
 143   1          // 00001
 144   1          // D     0=显示功能关   1=显示功能开
 145   1          // C     0=无光标       1=有光标
 146   1          // B     0=光标闪烁     1=光标不闪烁
 147   1          LcdWriteCom(0x0c); // 开显示不显示光标
 148   1      
 149   1          // 模式设置
 150   1          // 000001
 151   1          // I/D  0=写入新数据后光标左移     1=写入新数据后光标右移
 152   1          // S    0=写入新数据后显示屏不移动 1=写入新数据后显示屏整体右
 153   1          LcdWriteCom(0x06); // 写一个指针加1
 154   1      
 155   1          LcdWriteCom(0x01); // 清屏
 156   1      
 157   1          // 0x00 + 0x80
 158   1          LcdWriteCom(0x80); // 设置数据指针起点
 159   1      }
 160          #else
              void LcdInit() // LCD初始化子程序
              {
                  LcdWriteCom(0x32); // 将8位总线转为4位总线
                  LcdWriteCom(0x28); // 在四位线下的初始化
                  LcdWriteCom(0x0c); // 开显示不显示光标
                  LcdWriteCom(0x06); // 写一个指针加1
                  LcdWriteCom(0x01); // 清屏
                  LcdWriteCom(0x80); // 设置数据指针起点
              }
              #endif
 171          
 172          void TestLCD1602()
 173          {
 174   1          uchar i;
 175   1          LcdInit();
 176   1          for (i = 0; i < 16; i++)
C51 COMPILER V9.54   LCD1602                                                               07/03/2024 22:49:24 PAGE 4   

 177   1          {
 178   2              LcdWriteData(Disp[i]);
 179   2          }
 180   1      
 181   1          // 0x40 + 0x80
 182   1          LcdWriteCom(0x40 + 0x80); // 设置数据指针起点 在第二行
 183   1      
 184   1          for (i = 0; i < 16; i++)
 185   1          {
 186   2              LcdWriteData(Disp2[i]);
 187   2          }
 188   1      
 189   1          while (1)
 190   1              ;
 191   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    141    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     25    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
