<Window
    x:Class="Raspberry.Client.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Interaction="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:Interactivity="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:ap="clr-namespace:Raspberry.Client.AttachedProperties"
    xmlns:converters="clr-namespace:Raspberry.Client.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:input="clr-namespace:System.Windows.Input;assembly=WindowsBase"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:vm="clr-namespace:Raspberry.Client.ViewModels"
    Title="{Binding Title}"
    Width="1546"
    Height="869"
    d:DesignHeight="869"
    d:DesignWidth="1546"
    prism:ViewModelLocator.AutoWireViewModel="True"
    Background="#121212"
    Foreground="{StaticResource Control.Foreground}"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">
    <Window.Resources>
        <Style x:Key="Button.Style" TargetType="{x:Type Button}">
            <!--<Setter Property="Opacity" Value="0"></Setter>-->
            <Setter Property="Margin" Value="5" />
            <Setter Property="FontSize" Value="23" />
            <Setter Property="Width" Value="68" />
            <Setter Property="Height" Value="35" />
            <Setter Property="Foreground" Value="{StaticResource Control.Foreground}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!--<Trigger Property="IsPressed" Value="True">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>-->
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="GreenYellow" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <d:Window.DataContext>
        <vm:MainWindowViewModel x:Name="vm" />
    </d:Window.DataContext>

    <!--<ContentControl prism:RegionManager.RegionName="ContentRegion" />-->

    <Grid>
        <Grid.Resources>
            <Style TargetType="{x:Type Button}">
                <!--<Setter Property="Opacity" Value="0"></Setter>-->
                <Setter Property="Margin" Value="5" />
                <Setter Property="FontSize" Value="23" />
                <Setter Property="Width" Value="68" />
                <Setter Property="Height" Value="35" />
                <Style.Triggers>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Opacity" Value="0.5" />
                    </Trigger>

                </Style.Triggers>
            </Style>
        </Grid.Resources>

        <Image
            x:Name="csiImg"
            Source="{Binding Img}"
            Stretch="Fill" />

        <StackPanel
            Margin="25"
            VerticalAlignment="Top"
            Orientation="Horizontal"
            TextBlock.FontSize="25">
            <TextBlock Text="IP: " />
            <TextBox
                Width="200"
                Padding="10,0,0,0"
                VerticalContentAlignment="Center"
                Background="Transparent"
                BorderThickness="0"
                CaretBrush="{Binding Foreground, Mode=OneWay, RelativeSource={RelativeSource Mode=Self}}"
                Foreground="{StaticResource Control.Foreground}"
                IsReadOnly="{Binding IsChecked, Mode=OneWay, ElementName=togBtnStatus}"
                Text="192.168.1.1" />

            <ToggleButton
                x:Name="togBtnStatus"
                Width="25"
                Height="25"
                Background="Transparent"
                IsChecked="{Binding Status, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                IsThreeState="False">
                <ToggleButton.Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="Foreground" Value="{StaticResource Control.Foreground}" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Ellipse
                                        Width="{TemplateBinding Width}"
                                        Height="{TemplateBinding Height}"
                                        Cursor="Hand"
                                        Fill="{TemplateBinding Foreground}" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Foreground" Value="Green" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Foreground" Value="Gray" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>
        </StackPanel>

        <Grid>
            <Grid HorizontalAlignment="Left" VerticalAlignment="Bottom">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <Button
                    x:Name="btnW"
                    Grid.Row="0"
                    Grid.Column="1"
                    ap:ButtonKeyBoard.Key="{x:Static input:Key.W}"
                    Content="{x:Static input:Key.W}"
                    Style="{DynamicResource Button.Style}" />
                <Button
                    x:Name="btnA"
                    Grid.Row="1"
                    Grid.Column="0"
                    ap:ButtonKeyBoard.Key="{x:Static input:Key.A}"
                    Content="{x:Static input:Key.A}"
                    Style="{DynamicResource Button.Style}" />
                <Button
                    x:Name="btnS"
                    Grid.Row="1"
                    Grid.Column="1"
                    ap:ButtonKeyBoard.Key="{x:Static input:Key.S}"
                    Content="{x:Static input:Key.S}"
                    Style="{DynamicResource Button.Style}" />
                <Button
                    x:Name="btnD"
                    Grid.Row="1"
                    Grid.Column="2"
                    ap:ButtonKeyBoard.Key="{x:Static input:Key.D}"
                    Content="{x:Static input:Key.D}"
                    Style="{DynamicResource Button.Style}" />
            </Grid>

            <Grid HorizontalAlignment="Right" VerticalAlignment="Bottom">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.Resources>
                    <Style BasedOn="{StaticResource Button.Style}" TargetType="{x:Type Button}">
                        <Setter Property="Height" Value="35" />
                        <Setter Property="Width" Value="35" />
                    </Style>
                </Grid.Resources>
                <Button
                    x:Name="btnUp"
                    Grid.Row="0"
                    Grid.Column="1"
                    ap:ButtonKeyBoard.Key="{x:Static input:Key.Up}"
                    Content="↑" />
                <Button
                    x:Name="btnLeft"
                    Grid.Row="1"
                    Grid.Column="0"
                    ap:ButtonKeyBoard.Key="{x:Static input:Key.Left}"
                    Content="←" />
                <Button
                    x:Name="btnDown"
                    Grid.Row="2"
                    Grid.Column="1"
                    ap:ButtonKeyBoard.Key="{x:Static input:Key.Down}"
                    Content="↓" />
                <Button
                    x:Name="btnRight"
                    Grid.Row="1"
                    Grid.Column="2"
                    ap:ButtonKeyBoard.Key="{x:Static input:Key.Right}"
                    Content="→" />
            </Grid>
        </Grid>

    </Grid>
</Window>
